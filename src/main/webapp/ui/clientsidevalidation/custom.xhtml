<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:ui="http://java.sun.com/jsf/facelets"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:f="http://java.sun.com/jsf/core"
  xmlns:p="http://primefaces.org/ui"
  xmlns:fn="http://java.sun.com/jsp/jstl/functions"
  xmlns:pe="http://primefaces.org/ui/extensions">

<h:head>
  <title>Client Side Validation - Custom</title>
</h:head>

<h:form>
  <p:growl showDetail="true" />

  <p:panel header="Validate">
    <h:panelGrid
      columns="4"
      cellpadding="5">
      <h:outputLabel
        for="email1"
        value="Email 1: (JSF Validation)" />
      <p:inputText
        id="email1"
        value="#{csvCustomValidationView.text}">
        <f:validator validatorId="custom.emailValidator" />
      </p:inputText>
      <p:message
        for="email1"
        display="tooltip" />
      <h:outputText value="#{csvCustomValidationView.text}" />

      <h:outputLabel
        for="email2"
        value="Email 2: (Bean Validation)" />
      <p:inputText
        id="email2"
        value="#{csvCustomValidationView.email}" />
      <p:message
        for="email2"
        display="tooltip" />
      <h:outputText value="#{csvCustomValidationView.email}" />
    </h:panelGrid>

    <p:commandButton
      value="Save"
      ajax="false"
      icon="ui-icon-check"
      validateClient="true" />
  </p:panel>
</h:form>

<script type="text/javascript">
    /**
     * Faces Validator
     */
    PrimeFaces.validator['custom.emailValidator'] = {
 
        pattern: /\S+@\S+/,
 
        validate: function(element, value) {
            //use element.data() to access validation metadata, in this case there is none.
            if(!this.pattern.test(value)) {
                throw {
                    summary: 'Validation Error',
                    detail: value + ' is not a valid email.'
                }
            }
        }
    };
 
    /**
     * Bean validator
     */
    PrimeFaces.validator['Email'] = {
 
        pattern: /\S+@\S+/,
 
        MESSAGE_ID: 'org.primefaces.examples.validate.email.message',
 
        validate: function(element, value) {
            var vc = PrimeFaces.util.ValidationContext;
 
            if(!this.pattern.test(value)) {
                var msgStr = element.data('p-email-msg'),
                msg = msgStr ? {summary:msgStr, detail: msgStr} : vc.getMessage(this.MESSAGE_ID);
 
                throw msg;
            }
        }
    };
</script>

</html>